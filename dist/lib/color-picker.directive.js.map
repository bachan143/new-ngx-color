{"version":3,"sources":["../../src/lib/color-picker.directive.ts"],"names":[],"mappings":"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","file":"color-picker.directive.js","sourceRoot":"","sourcesContent":["import { OnInit, OnChanges, Directive, Input, Output, EventEmitter, Injector, ApplicationRef, ElementRef, ViewContainerRef, ReflectiveInjector, ComponentFactoryResolver, ComponentRef, OnDestroy } from '@angular/core';\r\n\r\nimport { ColorPickerService } from './color-picker.service';\r\nimport { ColorPickerComponent } from './color-picker.component';\r\n\r\nimport { SliderPosition, SliderDimension} from './helpers';\r\n\r\n\r\nexport class ColorPickerDirective implements OnInit, OnChanges, OnDestroy {\r\n     colorPicker: string;\r\n     cpToggle: boolean;\r\n     cpPosition: string = 'right';\r\n     cpPositionOffset: string = '0%';\r\n     cpPositionRelativeToArrow: boolean = false;\r\n     cpOutputFormat: string = 'hex';\r\n     cpPresetLabel: string = 'Preset colors';\r\n     cpPresetEmptyMessage: string = 'No colors added';\r\n     cpPresetEmptyMessageClass: string = 'preset-empty-message';\r\n     cpPresetColors: Array<string>;\r\n     cpMaxPresetColorsLength: number = 6;\r\n     cpCancelButton: boolean = false;\r\n     cpCancelButtonClass: string = 'cp-cancel-button-class';\r\n     cpCancelButtonText: string = 'Cancel';\r\n     cpOKButton: boolean = false;\r\n     cpOKButtonClass: string = 'cp-ok-button-class';\r\n     cpOKButtonText: string = 'OK';\r\n     cpAddColorButton: boolean = false;\r\n     cpAddColorButtonClass: string = 'cp-add-color-button-class';\r\n     cpAddColorButtonText: string = 'Add color';\r\n     cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';\r\n     cpFallbackColor: string = '#fff';\r\n     cpHeight: string = 'auto';\r\n     cpWidth: string = '272px';\r\n     cpIgnoredElements: any = [];\r\n     cpDialogDisplay: string = 'popup';\r\n     cpSaveClickOutside: boolean = true;\r\n     cpAlphaChannel: string = 'enabled';\r\n     cpUseRootViewContainer: boolean = false;\r\n\r\n     cpInputChange = new EventEmitter<any>(true);\r\n\r\n     cpToggleChange = new EventEmitter<boolean>(true);\r\n\r\n     cpSliderChange = new EventEmitter<any>(true);\r\n     cpSliderDragEnd = new EventEmitter<string>(true);\r\n     cpSliderDragStart = new EventEmitter<string>(true);\r\n\r\n     colorPickerCancel = new EventEmitter<string>(true);\r\n     colorPickerSelect = new EventEmitter<string>(true);\r\n     colorPickerChange = new EventEmitter<string>(false);\r\n     presetColorsChange = new EventEmitter<any>(true);\r\n\r\n    private dialog: any;\r\n    private created: boolean;\r\n    private ignoreChanges: boolean = false;\r\n    private cmpRef: ComponentRef<ColorPickerComponent>;\r\n\r\n    constructor(private injector: Injector, private cfr: ComponentFactoryResolver,\r\n      private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,\r\n      private service: ColorPickerService)\r\n    {\r\n        this.created = false;\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.cpToggle) {\r\n            if (changes.cpToggle.currentValue) this.openDialog();\r\n            if (!changes.cpToggle.currentValue && this.dialog) this.dialog.closeColorPicker();\r\n        }\r\n        if (changes.colorPicker) {\r\n            if (this.dialog && !this.ignoreChanges) {\r\n                if (this.cpDialogDisplay === 'inline') {\r\n                    this.dialog.setInitialColor(changes.colorPicker.currentValue);\r\n                }\r\n                this.dialog.setColorFromString(changes.colorPicker.currentValue, false);\r\n\r\n            }\r\n            this.ignoreChanges = false;\r\n        }\r\n        if (changes.cpPresetLabel || changes.cpPresetColors) {\r\n            if (this.dialog) {\r\n                this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.colorPicker = this.colorPicker || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n        /*let hsva = this.service.stringToHsva(this.colorPicker);\r\n        if (hsva === null) hsva = this.service.stringToHsva(this.colorPicker, true);\r\n        if (hsva == null) {\r\n            hsva = this.service.stringToHsva(this.cpFallbackColor);\r\n        }\r\n        let color = this.service.outputFormat(hsva, this.cpOutputFormat, this.cpAlphaChannel);\r\n        if (color !== this.colorPicker) {\r\n            //setTimeout(() => {\r\n              this.colorPickerChange.emit(color);\r\n              this.cdr.detectChanges();\r\n            //}, 0);\r\n        }*/\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cmpRef !== undefined) {\r\n            this.cmpRef.destroy();\r\n        }\r\n    }\r\n\r\n    openDialog() {\r\n        this.colorPicker = this.colorPicker || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n\r\n        if (!this.created) {\r\n            this.created = true;\r\n            let vcRef = this.vcRef;\r\n            if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\r\n              const classOfRootComponent = this.appRef.componentTypes[0];\r\n              const appInstance = this.injector.get(classOfRootComponent);\r\n              vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\r\n              if (vcRef === this.vcRef) {\r\n                console.warn('You are using cpUseRootViewContainer, but the root component is not exposing viewContainerRef!' +\r\n                  'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.');\r\n              }\r\n            }\r\n            const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);\r\n            const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\r\n            this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\r\n            this.cmpRef.instance.setDialog(this, this.elRef, this.colorPicker, this.cpPosition, this.cpPositionOffset,\r\n                this.cpPositionRelativeToArrow, this.cpOutputFormat, this.cpPresetLabel, this.cpPresetEmptyMessage,\r\n                this.cpPresetEmptyMessageClass, this.cpPresetColors, this.cpMaxPresetColorsLength,\r\n                this.cpCancelButton, this.cpCancelButtonClass, this.cpCancelButtonText,\r\n                this.cpOKButton, this.cpOKButtonClass, this.cpOKButtonText,\r\n                this.cpAddColorButton, this.cpAddColorButtonClass, this.cpAddColorButtonText,\r\n                this.cpRemoveColorButtonClass,\r\n                this.cpHeight, this.cpWidth, this.cpIgnoredElements,\r\n                this.cpDialogDisplay, this.cpSaveClickOutside, this.cpAlphaChannel, this.cpUseRootViewContainer);\r\n            this.dialog = this.cmpRef.instance;\r\n\r\n            if (this.vcRef !== vcRef) {\r\n                this.cmpRef.changeDetectorRef.detectChanges();\r\n            }\r\n        } else if (this.dialog) {\r\n            this.dialog.openDialog(this.colorPicker);\r\n        }\r\n    }\r\n\r\n    toggle(value: boolean) {\r\n        this.cpToggleChange.emit(value);\r\n    }\r\n\r\n    colorChanged(value: string, ignore: boolean = true) {\r\n        this.ignoreChanges = ignore;\r\n        this.colorPickerChange.emit(value);\r\n    }\r\n\r\n    colorCanceled() {\r\n      this.colorPickerCancel.emit();\r\n    }\r\n\r\n    colorSelected(value: string) {\r\n        this.colorPickerSelect.emit(value);\r\n    }\r\n\r\n    presetColorsChanged(value: Array<any>) {\r\n        this.presetColorsChange.emit(value);\r\n    } \r\n\r\n    inputFocus() {\r\n        if (this.cpIgnoredElements.filter((item: any) => item === this.elRef.nativeElement).length === 0) {\r\n            this.openDialog();\r\n        }\r\n    }\r\n\r\n    inputChange(value: string) {\r\n      if (this.dialog) {\r\n        this.dialog.setColorFromString(value, true);\r\n      } else {\r\n        this.colorPicker = value || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\r\n\r\n        this.colorPickerChange.emit(this.colorPicker);\r\n      }\r\n    }\r\n\r\n    inputChanged(event: any) {\r\n        this.cpInputChange.emit(event);\r\n    }\r\n\r\n    sliderChanged(event: any) {\r\n        this.cpSliderChange.emit(event);\r\n    }\r\n\r\n    sliderDragEnd(event: any) {\r\n        this.cpSliderDragEnd.emit(event);\r\n    }\r\n\r\n    sliderDragStart(event: any) {\r\n        this.cpSliderDragStart.emit(event);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[colorPicker]',\r\n    host: {\r\n      '(click)': 'inputFocus()',\r\n      '(focus)': 'inputFocus()',\r\n      '(input)': 'inputChange($event.target.value)'\r\n    }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: ViewContainerRef, },\n{type: ElementRef, },\n{type: ColorPickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'colorPicker': [{ type: Input, args: ['colorPicker', ] },],\n'cpToggle': [{ type: Input, args: ['cpToggle', ] },],\n'cpPosition': [{ type: Input, args: ['cpPosition', ] },],\n'cpPositionOffset': [{ type: Input, args: ['cpPositionOffset', ] },],\n'cpPositionRelativeToArrow': [{ type: Input, args: ['cpPositionRelativeToArrow', ] },],\n'cpOutputFormat': [{ type: Input, args: ['cpOutputFormat', ] },],\n'cpPresetLabel': [{ type: Input, args: ['cpPresetLabel', ] },],\n'cpPresetEmptyMessage': [{ type: Input, args: ['cpPresetEmptyMessage', ] },],\n'cpPresetEmptyMessageClass': [{ type: Input, args: ['cpPresetEmptyMessageClass', ] },],\n'cpPresetColors': [{ type: Input, args: ['cpPresetColors', ] },],\n'cpMaxPresetColorsLength': [{ type: Input, args: ['cpMaxPresetColorsLength', ] },],\n'cpCancelButton': [{ type: Input, args: ['cpCancelButton', ] },],\n'cpCancelButtonClass': [{ type: Input, args: ['cpCancelButtonClass', ] },],\n'cpCancelButtonText': [{ type: Input, args: ['cpCancelButtonText', ] },],\n'cpOKButton': [{ type: Input, args: ['cpOKButton', ] },],\n'cpOKButtonClass': [{ type: Input, args: ['cpOKButtonClass', ] },],\n'cpOKButtonText': [{ type: Input, args: ['cpOKButtonText', ] },],\n'cpAddColorButton': [{ type: Input, args: ['cpAddColorButton', ] },],\n'cpAddColorButtonClass': [{ type: Input, args: ['cpAddColorButtonClass', ] },],\n'cpAddColorButtonText': [{ type: Input, args: ['cpAddColorButtonText', ] },],\n'cpRemoveColorButtonClass': [{ type: Input, args: ['cpRemoveColorButtonClass', ] },],\n'cpFallbackColor': [{ type: Input, args: ['cpFallbackColor', ] },],\n'cpHeight': [{ type: Input, args: ['cpHeight', ] },],\n'cpWidth': [{ type: Input, args: ['cpWidth', ] },],\n'cpIgnoredElements': [{ type: Input, args: ['cpIgnoredElements', ] },],\n'cpDialogDisplay': [{ type: Input, args: ['cpDialogDisplay', ] },],\n'cpSaveClickOutside': [{ type: Input, args: ['cpSaveClickOutside', ] },],\n'cpAlphaChannel': [{ type: Input, args: ['cpAlphaChannel', ] },],\n'cpUseRootViewContainer': [{ type: Input, args: ['cpUseRootViewContainer', ] },],\n'cpInputChange': [{ type: Output, args: ['cpInputChange', ] },],\n'cpToggleChange': [{ type: Output, args: ['cpToggleChange', ] },],\n'cpSliderChange': [{ type: Output, args: ['cpSliderChange', ] },],\n'cpSliderDragEnd': [{ type: Output, args: ['cpSliderDragEnd', ] },],\n'cpSliderDragStart': [{ type: Output, args: ['cpSliderDragStart', ] },],\n'colorPickerCancel': [{ type: Output, args: ['colorPickerCancel', ] },],\n'colorPickerSelect': [{ type: Output, args: ['colorPickerSelect', ] },],\n'colorPickerChange': [{ type: Output, args: ['colorPickerChange', ] },],\n'presetColorsChange': [{ type: Output, args: ['cpPresetColorsChange', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}