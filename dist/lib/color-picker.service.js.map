{"version":3,"sources":["../../src/lib/color-picker.service.ts"],"names":[],"mappings":"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","file":"color-picker.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { Rgba, Hsla, Hsva } from './formats';\r\n\r\n\r\nexport class ColorPickerService {\r\n    private active = null;\r\n\r\n    constructor() { }\r\n\r\n    setActive(active: any) {\r\n      if (this.active && this.active !== active && this.active.cpDialogDisplay !== 'inline') {\r\n        this.active.closeColorPicker();\r\n      }\r\n      this.active = active;\r\n    }\r\n\r\n    hsla2hsva(hsla: Hsla): Hsva {\r\n        let h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\r\n        if (l === 0) {\r\n            return new Hsva(h, 0, 0, a);\r\n        } else {\r\n            let v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\r\n            return new Hsva(h, 2 * (v - l) / v, v, a);\r\n        }\r\n    }\r\n\r\n    hsva2hsla(hsva: Hsva): Hsla {\r\n        let h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\r\n        if (v === 0) {\r\n            return new Hsla(h, 0, 0, a)\r\n        } else if (s === 0 && v === 1) {\r\n            return new Hsla(h, 1, 1, a)\r\n        } else {\r\n            let l = v * (2 - s) / 2;\r\n            return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a)\r\n        }\r\n    }\r\n\r\n    rgbaToHsva(rgba: Rgba): Hsva {\r\n        let r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\r\n        let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        let h: number, s: number, v: number = max;\r\n\r\n        let d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if (max === min) {\r\n            h = 0;\r\n        } else {\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return new Hsva(h, s, v, a)\r\n    }\r\n\r\n    hsvaToRgba(hsva: Hsva): Rgba {\r\n        let h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\r\n        let r: number, g: number, b: number;\r\n\r\n        let i = Math.floor(h * 6);\r\n        let f = h * 6 - i;\r\n        let p = v * (1 - s);\r\n        let q = v * (1 - f * s);\r\n        let t = v * (1 - (1 - f) * s);\r\n\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = v, g = t, b = p;\r\n                break;\r\n            case 1:\r\n                r = q, g = v, b = p;\r\n                break;\r\n            case 2:\r\n                r = p, g = v, b = t;\r\n                break;\r\n            case 3:\r\n                r = p, g = q, b = v;\r\n                break;\r\n            case 4:\r\n                r = t, g = p, b = v;\r\n                break;\r\n            case 5:\r\n                r = v, g = p, b = q;\r\n                break;\r\n        }\r\n\r\n        return new Rgba(r, g, b, a)\r\n    }\r\n\r\n    stringToHsva(colorString: string = '', allowHex8: boolean = false): Hsva {\r\n        let stringParsers = [\r\n            {\r\n                re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n                parse: function(execResult: any) {\r\n                    return new Rgba(parseInt(execResult[2]) / 255,\r\n                        parseInt(execResult[3]) / 255,\r\n                        parseInt(execResult[4]) / 255,\r\n                        isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\r\n                }\r\n            },\r\n            {\r\n                re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\r\n                parse: function(execResult: any) {\r\n                    return new Hsla(parseInt(execResult[2]) / 360,\r\n                        parseInt(execResult[3]) / 100,\r\n                        parseInt(execResult[4]) / 100,\r\n                        isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\r\n                }\r\n            }\r\n        ];\r\n        if (allowHex8) {\r\n            stringParsers.push({\r\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\r\n                parse: function(execResult: any) {\r\n                    return new Rgba(parseInt(execResult[1], 16) / 255,\r\n                        parseInt(execResult[2], 16) / 255,\r\n                        parseInt(execResult[3], 16) / 255,\r\n                        parseInt(execResult[4] || 'FF', 16) / 255);\r\n                }\r\n            });\r\n        } else {\r\n            stringParsers.push({\r\n                re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\r\n                parse: function(execResult: any) {\r\n                    return new Rgba(parseInt(execResult[1], 16) / 255,\r\n                        parseInt(execResult[2], 16) / 255,\r\n                        parseInt(execResult[3], 16) / 255,\r\n                        1);\r\n                }\r\n            },\r\n                {\r\n                    re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\r\n                    parse: function(execResult: any) {\r\n                        return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\r\n                            parseInt(execResult[2] + execResult[2], 16) / 255,\r\n                            parseInt(execResult[3] + execResult[3], 16) / 255,\r\n                            1);\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n        colorString = (colorString || '').toLowerCase();\r\n        let hsva: Hsva = null;\r\n        for (let key in stringParsers) {\r\n            if (stringParsers.hasOwnProperty(key)) {\r\n                let parser = stringParsers[key];\r\n                let match = parser.re.exec(colorString), color: any = match && parser.parse(match);\r\n                if (color) {\r\n                    if (color instanceof Rgba) {\r\n                        hsva = this.rgbaToHsva(color);\r\n                    } else if (color instanceof Hsla) {\r\n                        hsva = this.hsla2hsva(color);\r\n                    }\r\n                    return hsva;\r\n                }\r\n            }\r\n        }\r\n        return hsva;\r\n    }\r\n\r\n    outputFormat(hsva: Hsva, outputFormat: string, alphaChannel: string): string {\r\n        switch (outputFormat) {\r\n            case 'hsla':\r\n                let hsla = this.hsva2hsla(hsva);\r\n                let hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100), Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\r\n                if (hsva.a < 1 || alphaChannel === 'always') {\r\n                    return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%,' + hslaText.a + ')';\r\n                } else {\r\n                    return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';\r\n                }\r\n            case 'rgba':\r\n                let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\r\n                if (hsva.a < 1 || alphaChannel === 'always') {\r\n                    return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + Math.round(rgba.a * 100) / 100 + ')';\r\n                } else {\r\n                    return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\r\n                }\r\n            default:\r\n                return this.hexText(this.denormalizeRGBA(this.hsvaToRgba(hsva)), alphaChannel === 'always' || alphaChannel === 'hex8');\r\n\r\n        }\r\n    }\r\n\r\n    hexText(rgba: Rgba, allowHex8: boolean): string {\r\n        let hexText = '#' + ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16).substr(1);\r\n        /*if (hexText[1] === hexText[2] && hexText[3] === hexText[4] && hexText[5] === hexText[6] && !allowHex8) {\r\n            hexText = '#' + hexText[1] + hexText[3] + hexText[5];\r\n        }*/\r\n        if (allowHex8) {\r\n            hexText += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);\r\n        }\r\n        return hexText;\r\n    }\r\n\r\n    denormalizeRGBA(rgba: Rgba): Rgba {\r\n        return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a);\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}